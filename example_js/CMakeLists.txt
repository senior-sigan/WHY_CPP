cmake_minimum_required(VERSION 3.6)
project(example_js CXX)
set(CMAKE_CXX_STANDARD 14)

include_directories(${WHYCPP_JS_INCLUDES_DIR})
include_directories(${WHYCPP_INCLUDES_DIR})

if (EMSCRIPTEN)
    add_definitions(-DEMSCRIPTEN)
    add_definitions(-DUSE_WASM)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} --bind --memory-init-file 0 -s TOTAL_MEMORY=64*1024*1024 -s SAFE_HEAP=1")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -s USE_WEBGL2=1 -s USE_SDL=2 -s FORCE_FILESYSTEM=1")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -s WASM=1")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -s ASSERTIONS=1")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} --use-preload-plugins")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} --embed-file src@/")
    set(CMAKE_EXECUTABLE_SUFFIX ".js")

    file(COPY index.html DESTINATION ${CMAKE_BINARY_DIR}/${PROJECT_NAME})
    file(COPY src DESTINATION ${CMAKE_BINARY_DIR}/${PROJECT_NAME})
    file(COPY assets DESTINATION ${CMAKE_BINARY_DIR}/${PROJECT_NAME}/src)
else ()
    file(COPY src/ DESTINATION ${CMAKE_BINARY_DIR}/${PROJECT_NAME})
    file(COPY assets DESTINATION ${CMAKE_BINARY_DIR}/${PROJECT_NAME})
endif ()

add_executable(${PROJECT_NAME} main.cpp)
target_link_libraries(${PROJECT_NAME} whycpp_js)